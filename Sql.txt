-- Create table for departments
CREATE TABLE Department (
    department_id INT AUTO_INCREMENT PRIMARY KEY,
    department_name VARCHAR(100) NOT NULL
);

-- Create table for courses (optional, as courses are associated with departments)
CREATE TABLE Course (
    course_id INT AUTO_INCREMENT PRIMARY KEY,
    course_name VARCHAR(100) NOT NULL,
    department_id INT,
    FOREIGN KEY (department_id) REFERENCES Department(department_id)
);

-- Create table for students
CREATE TABLE Student (
    roll_no INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    course_id INT,
    department_id INT,
    FOREIGN KEY (course_id) REFERENCES Course(course_id),
    FOREIGN KEY (department_id) REFERENCES Department(department_id)
);

-- Sample Data Insertion

-- Inserting Departments
INSERT INTO Department (department_name) VALUES ('Computer Science');
INSERT INTO Department (department_name) VALUES ('Electrical Engineering');

-- Inserting Courses (can be linked to departments)
INSERT INTO Course (course_name, department_id) VALUES ('B.Tech Computer Science', 1);
INSERT INTO Course (course_name, department_id) VALUES ('B.Tech Electrical Engineering', 2);

-- Inserting Students
INSERT INTO Student (roll_no, name, course_id, department_id) 
VALUES (101, 'John Doe', 1, 1);

INSERT INTO Student (roll_no, name, course_id, department_id) 
VALUES (102, 'Jane Smith', 2, 2);

INSERT INTO Student (roll_no, name, course_id, department_id) 
VALUES (103, 'Alice Brown', 1, 1);

INSERT INTO Student (roll_no, name, course_id, department_id) 
VALUES (104, 'Bob Johnson', 2, 2);

-- Query to get all students with their department and course
SELECT s.roll_no, s.name, d.department_name, c.course_name
FROM Student s
JOIN Department d ON s.department_id = d.department_id
JOIN Course c ON s.course_id = c.course_id;

-- Query to display all departments
SELECT department_name FROM Department;

-- Query to display all students in a specific department (e.g., Computer Science)
SELECT s.roll_no, s.name, c.course_name
FROM Student s
JOIN Course c ON s.course_id = c.course_id
WHERE s.department_id = (SELECT department_id FROM Department WHERE department_name = 'Computer Science');